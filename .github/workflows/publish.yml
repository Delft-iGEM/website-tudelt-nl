name: Build Pull request
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
  TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
  NEXT_PUBLIC_TINA_BRANCH: ${{ github.head_ref }}
jobs:
  build-deploy-tudelft:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - run: npm install
      - run: npm run build

      - name: Push to igem.tnw.tudelft.nl
        env:
          DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
        run: |
          if [ -z "$DEPLOY_PASSWORD" ]; then
            echo "DEPLOY_PASSWORD is not set."
            exit 1
          fi

          git config --global user.email "igem@tudelft.nl"
          git config --global user.name "igem.tnw"

          # https://igem.tnw@igem.tnw.tudelft.nl/plesk-git/igem.git
          echo "https://igem.tnw:$DEPLOY_PASSWORD@igem.tnw.tudelft.nl" >> ~/.git-credentials
          git config --global credential.helper 'store --file ~/.git-credentials'

          cd out
          git init
          git add .
          git commit -m "Deploy to igem.tnw.tudelft.nl"
          git remote add origin https://igem.tnw:$DEPLOY_PASSWORD@igem.tnw.tudelft.nl/plesk-git/igem.git
          git push --force origin master

          echo "Deployed to igem.tnw.tudelft.nl"

  build-gh-pages:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file.
          static_site_generator: next
      - name: Inject basePath into tina configuration
        run: |
          # Replace "build: {" with "build: { basePath: '/${{ github.head_ref }}',"
          sed -i "s/build: {/build: { basePath: '\/${{ github.head_ref }}',/" ./tina/config.tsx
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - run: npm install
      - run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-gh-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
